import Head from "next/head";
import { Inter } from "@next/font/google";
import {
  Box,
  Button,
  Card,
  FormControl,
  FormLabel,
  Input,
  Modal,
  ModalContent,
  Text,
  Textarea,
  useDisclosure,
  useToast,
} from "@chakra-ui/react";
import { useCallback, useState } from "react";
import { addArticle, getArticles } from "@/helpers/firebase";
import SectionTitle from "@/components/molecules/SectionTitle";
import { Article } from "@/types/data";

const inter = Inter({ subsets: ["latin"] });

export const getServerSideProps = async () => {
  try {
    const res = await getArticles("articles");

    // console.log(JSON.stringify(res.result?.docs[0]));
    return {
      props: {
        articles: res.result,
      },
    };
  } catch (error) {
    throw error;
  }
};

export default function Home({ articles }: { articles: Article[] }) {
  const { isOpen, onOpen, onClose } = useDisclosure();
  const [formData, setFormData] = useState({
    title: "",
    content: "",
  });
  const toast = useToast();
  const submitForm = useCallback(
    async (e: any) => {
      e.preventDefault();
      try {
        const { result } = await addArticle("articles", formData);
        setFormData({ title: "", content: "" });
        onClose();
        toast({
          title: "Berhasil membuat artikel",
          status: "success",
        });
      } catch (error) {
        throw error;
      }
    },
    [formData]
  );
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Box width={"100%"} marginTop={20} paddingX={20}>
          {/* <Button background={"green"} color={"white"} onClick={onOpen}>
            Add new article
          </Button> */}
          <SectionTitle
            title="My blog posts"
            withButton
            buttonText="Add new article"
            buttonColor="green"
            buttonTextColor="white"
            onButtonClick={onOpen}
          />
          <Modal isCentered isOpen={isOpen} onClose={onClose}>
            <ModalContent padding={10}>
              <Text fontWeight={"bold"} fontSize={"larger"} marginBottom={5}>
                Create new article
              </Text>
              <form onSubmit={submitForm}>
                <FormControl>
                  <FormLabel>Title</FormLabel>
                  <Input
                    value={formData.title}
                    onChange={(e) =>
                      setFormData((prevState) => ({
                        ...prevState,
                        title: e.target.value,
                      }))
                    }
                  />
                </FormControl>
                <FormControl>
                  <FormLabel>Content</FormLabel>
                  <Textarea
                    onChange={(e) =>
                      setFormData((prevState) => ({
                        ...prevState,
                        content: e.target.value,
                      }))
                    }
                  />
                </FormControl>
                <Button type="submit">Create article</Button>
              </form>
            </ModalContent>
          </Modal>
          {articles.length &&
            articles.map((article: Article) => (
              <Card>
                <Text>{article.title}</Text>
                <Text>{article.content}</Text>
              </Card>
            ))}
        </Box>
      </main>
    </>
  );
}
